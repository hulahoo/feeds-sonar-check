# Generated by Django 4.0.4 on 2022-06-03 09:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import intelhandler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('type', models.CharField(max_length=30, verbose_name='Тип аттрибута')),
                ('timestamp', models.CharField(max_length=10, verbose_name='Временная отметка')),
                ('to_ids', models.BooleanField(blank=True, null=True)),
                ('category', models.CharField(max_length=30, verbose_name='Категория аттрибута')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='Комментарий')),
                ('uuid', models.CharField(max_length=36, primary_key=True, serialize=False, verbose_name='Уникальный идентификатор')),
                ('object_relation', models.CharField(max_length=30, verbose_name='Отношение к объекту')),
                ('value', models.CharField(max_length=128, verbose_name='Значение')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('domain_name', models.CharField(max_length=256, unique=True, verbose_name='Доменное имя')),
            ],
            options={
                'verbose_name': 'Домен',
                'verbose_name_plural': 'Домены',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('email', models.CharField(max_length=128, unique=True, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Адрес электронной почты',
                'verbose_name_plural': 'Адреса электронных почт',
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('type_of_feed', models.CharField(choices=[('FEMA', "Email's origin"), ('SEMA', "Email's subject"), ('MD5H', 'File hashe MD5'), ('SHA1', 'File hashe SHA1'), ('SHA2', 'File hashe SHA256'), ('FILE', 'File name'), ('REGS', 'Registry'), ('IPAD', 'IP adresses'), ('URLS', "Full URL's"), ('DOMN', "Domain's")], default='IPAD', max_length=4, verbose_name='Тип фида')),
                ('format_of_feed', models.CharField(choices=[('CSV', 'CSV формат'), ('JSN', 'JSON формат'), ('XML', 'XML формат'), ('TXT', 'TXT формат')], default='TXT', max_length=3, verbose_name='Формат фида')),
                ('auth_type', models.CharField(choices=[('NAU', 'Отсуствует'), ('API', 'API token'), ('BSC', 'HTTP basic')], default='NAU', max_length=3, verbose_name='Тип авторизации')),
                ('polling_frequency', models.CharField(choices=[('NVR', 'Никогда'), ('M30', '30 минут'), ('HR1', '1 час'), ('HR2', '2 часа'), ('HR4', '4 часа'), ('HR8', '8 часов'), ('H16', '16 часов'), ('H24', '24 часа')], default='NVR', max_length=3, verbose_name='Частота обновления фида')),
                ('auth_login', models.CharField(blank=True, max_length=32, null=True, verbose_name='Логин для авторизации')),
                ('auth_password', models.CharField(blank=True, max_length=64, null=True, verbose_name='Пароль для авторизации')),
                ('ayth_querystring', models.CharField(blank=True, max_length=128, null=True, verbose_name='Строка для авторизации')),
                ('separator', models.CharField(blank=True, max_length=8, null=True, verbose_name='Разделитель для CSV формата')),
                ('sertificate', models.FileField(blank=True, null=True, upload_to='', verbose_name='Файл сертификат')),
                ('vendor', models.CharField(max_length=32, verbose_name='Вендор')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Название фида')),
                ('link', models.CharField(max_length=100, verbose_name='Ссылка на фид')),
                ('confidence', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Достоверность')),
                ('records_quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество записей')),
            ],
            options={
                'verbose_name': 'Фид',
                'verbose_name_plural': 'Фиды',
            },
        ),
        migrations.CreateModel(
            name='FileHash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('hash', models.CharField(max_length=128, unique=True, verbose_name='Хэш файла')),
            ],
            options={
                'verbose_name': 'Хэш файла',
                'verbose_name_plural': 'Хэши файлов',
            },
        ),
        migrations.CreateModel(
            name='FullURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('url', models.CharField(max_length=256, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'URL',
                'verbose_name_plural': "URL'ы",
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('type', models.CharField(choices=[('FEMA', "Email's origin"), ('SEMA', "Email's subject"), ('MD5H', 'File hashe MD5'), ('SHA1', 'File hashe SHA1'), ('SHA2', 'File hashe SHA256'), ('FILE', 'File name'), ('REGS', 'Registry'), ('IPAD', 'IP adresses'), ('URLS', "Full URL's"), ('DOMN', "Domain's")], default='IPAD', max_length=4, verbose_name='Тип индикатора')),
                ('value', models.CharField(max_length=256, verbose_name='Значение индикатора')),
                ('updated_date', models.DateTimeField(verbose_name='Дата последнего обновления')),
                ('weight', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Вес')),
                ('false_detected', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='счетчик ложных срабатываний')),
                ('positive_detected', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='счетчик позитивных срабатываний')),
                ('detected', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='общий счетчик срабатываний')),
                ('first_detected_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата первого срабатывания')),
                ('last_detected_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата последнего срабатывания')),
            ],
            options={
                'verbose_name': 'Фид',
                'verbose_name_plural': 'Фиды',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('address', models.CharField(max_length=39, unique=True, verbose_name='IP адрес')),
            ],
            options={
                'verbose_name': 'IP адрес',
                'verbose_name_plural': 'IP адреса',
            },
        ),
        migrations.CreateModel(
            name='OrganizationContact',
            fields=[
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('name', models.CharField(max_length=30, verbose_name='Название организации')),
                ('uuid', models.CharField(max_length=36, primary_key=True, serialize=False, verbose_name='Уникальный идентификатор')),
            ],
            options={
                'verbose_name': 'Контакт организации',
                'verbose_name_plural': 'Контакты организаций',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('name', models.CharField(max_length=30, verbose_name='Название тега')),
                ('colour', models.CharField(blank=True, max_length=30, null=True, verbose_name='Название тега')),
                ('exportable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='MispEvent',
            fields=[
                ('created', intelhandler.models.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('modified', intelhandler.models.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('threat_level_id', models.CharField(max_length=1, verbose_name='Id уровня угрозы')),
                ('timestamp', models.CharField(max_length=10, verbose_name='Временная отметка последнего действия')),
                ('info', models.CharField(max_length=256, verbose_name='Временная отметка')),
                ('publish_timestamp', models.CharField(max_length=10, verbose_name='Временная отметка публикации')),
                ('date', models.DateField(verbose_name='Дата возникновения')),
                ('published', models.BooleanField(verbose_name='Опубликовано')),
                ('analysis', models.CharField(max_length=1, verbose_name='Анализ')),
                ('uuid', models.CharField(max_length=36, primary_key=True, serialize=False, verbose_name='Уникальный идентификатор')),
                ('orgc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intelhandler.organizationcontact')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intelhandler.tag')),
            ],
            options={
                'verbose_name': 'Misp событие',
                'verbose_name_plural': 'Misp события',
            },
        ),
    ]
